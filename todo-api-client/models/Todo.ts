/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Todo
 */
export interface Todo {
  /**
   *
   * @type {number}
   * @memberof Todo
   */
  readonly id?: number;
  /**
   *
   * @type {string}
   * @memberof Todo
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof Todo
   */
  description?: string;
  /**
   *
   * @type {Date}
   * @memberof Todo
   */
  readonly createdAt?: Date;
  /**
   *
   * @type {boolean}
   * @memberof Todo
   */
  complete?: boolean;
  /**
   *
   * @type {Date}
   * @memberof Todo
   */
  completedAt?: Date | null;
  /**
   * Task priority
   * @type {number}
   * @memberof Todo
   */
  priority?: number;
  /**
   *
   * @type {Date}
   * @memberof Todo
   */
  dueDate?: Date | null;
  /**
   *
   * @type {number}
   * @memberof Todo
   */
  list?: number;
  /**
   *
   * @type {number}
   * @memberof Todo
   */
  readonly user?: number;
}

/**
 * Check if a given object implements the Todo interface.
 */
export function instanceOfTodo(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "id" in value;
  isInstance = isInstance && "title" in value;
  isInstance = isInstance && "createdAt" in value;
  isInstance = isInstance && "user" in value;

  return isInstance;
}

export function TodoFromJSON(json: any): Todo {
  return TodoFromJSONTyped(json, false);
}

export function TodoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Todo {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    title: json["title"],
    description: !exists(json, "description") ? undefined : json["description"],
    createdAt: new Date(json["created_at"]),
    complete: !exists(json, "complete") ? undefined : json["complete"],
    completedAt: !exists(json, "completed_at")
      ? undefined
      : json["completed_at"] === null
      ? null
      : new Date(json["completed_at"]),
    priority: !exists(json, "priority") ? undefined : json["priority"],
    dueDate: !exists(json, "due_date")
      ? undefined
      : json["due_date"] === null
      ? null
      : new Date(json["due_date"]),
    list: !exists(json, "list") ? undefined : json["list"],
    user: json["user"],
  };
}

export function TodoToJSON(value?: Todo | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    title: value.title,
    description: value.description,
    complete: value.complete,
    completed_at:
      value.completedAt === undefined
        ? undefined
        : value.completedAt === null
        ? null
        : value.completedAt.toISOString(),
    priority: value.priority,
    due_date:
      value.dueDate === undefined
        ? undefined
        : value.dueDate === null
        ? null
        : value.dueDate.toISOString(),
    list: value.list,
  };
}
