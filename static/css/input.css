/* input.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 47.4% 11.2%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 47.4% 11.2%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 100% 50%;
    --destructive-foreground: 210 40% 98%;

    --ring: 215 20.2% 65.1%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 224 71% 4%;
    --foreground: 213 31% 91%;

    --muted: 223 47% 11%;
    --muted-foreground: 215.4 16.3% 56.9%;

    --accent: 216 34% 17%;
    --accent-foreground: 210 40% 98%;

    --popover: 224 71% 4%;
    --popover-foreground: 215 20.2% 65.1%;

    --border: 216 34% 17%;
    --input: 216 34% 17%;

    --card: 224 71% 4%;
    --card-foreground: 213 31% 91%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 1.2%;

    --secondary: 222.2 47.4% 11.2%;
    --secondary-foreground: 210 40% 98%;

    --destructive: 0 63% 31%;
    --destructive-foreground: 210 40% 98%;

    --ring: 216 34% 17%;

    --radius: 0.5rem;
  }

  @font-face {
    font-family: "Maple";
    font-weight: 400;
    src: url("./font/MapleMono/MapleMono-Regular.ttf") format("TrueType");
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Grape Nuts";
    font-weight: 400;
    src: url("./font/GrapeNuts/GrapeNuts-Regular.ttf") format("TrueType");
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Noto Sans";
    font-weight: 400;
    src: url("./font/NotoSans/NotoSans-Regular.ttf") format("TrueType");
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Noto Sans";
    font-weight: 600;
    src: url("./font/NotoSans/NotoSans-Bold.ttf") format("TrueType");
    font-style: bold;
    font-display: swap;
  }

  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
  html {
    @apply font-Noto;
  }

  h1 {
    font-size: larger;
    font-weight: bold;
  }
  h2 {
    font-size: large;
    font-weight: bold;
  }
  h3 {
    font-size: medium;
    font-weight: bold;
  }
}

@media screen and (max-width: 900px) {
  html {
    font-size: 14px;
  }
}

@media screen and (max-width: 750px) {
  /* html {
    font-size: 12px;
  }*/
  body {
    min-width: 320px;
  }
}
/* Body style */
.body-overflow {
  overflow-y: auto;
  overflow-x: hidden;
  width: 100vw;
}

/*Show child element when hovering on parent element. When device hasHover */
body.hasHover .parent .hidden-child {
  visibility: hidden;
}

body.hasHover .parent:hover .hidden-child {
  visibility: visible;
}

/* Enable hover style when using device with hover */
body.hasHover .lists-views:hover {
  text-decoration-line: underline;
  text-decoration-color: #06b6d4;
  text-decoration-thickness: 2px;
  text-underline-offset: 4px;
}

body.hasHover .lists-active:hover {
  text-decoration-line: underline;
  text-decoration-color: #8b5cf6;
  text-decoration-thickness: 2px;
  text-underline-offset: 4px;
}

body.hasHover .lists-archived:hover {
  text-decoration-line: underline;
  text-decoration-color: #d946ef;
  text-decoration-thickness: 2px;
  text-underline-offset: 4px;
}

body.hasHover svg.edit-todo {
  height: 1.6rem;
  width: 1.6rem;
}

/* When using touch input devices hide .hidden-child for lists in sidebar unless is selected */
body.noHover .parent .hidden-child {
  visibility: hidden;
}

body.noHover .parent .list-actions-selected.hidden-child {
  visibility: visible;
}

body.noHover .list-view-selected {
  text-decoration-line: underline;
  text-decoration-color: #06b6d4;
  text-decoration-thickness: 2px;
  text-underline-offset: 4px;
}

body.noHover .list-active-selected {
  text-decoration-line: underline;
  text-decoration-color: #8b5cf6;
  text-decoration-thickness: 2px;
  text-underline-offset: 4px;
}

body.noHover .list-archived-selected {
  text-decoration-line: underline;
  text-decoration-color: #d946ef;
  text-decoration-thickness: 2px;
  text-underline-offset: 4px;
}

/* When using touch input devices show .hidden-child for todos in taskView by default */
body.noHover .parent .hidden-child.todo-actions {
  visibility: visible;
}

body.noHover svg.edit-todo {
  height: 1.4rem;
  width: 1.4rem;
}

/* Animation for modals */
@keyframes popover-content-show {
  from {
    opacity: 0;
    transform: scale(0);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes popover-content-hide {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0);
  }
}

/* Animation for sidebar */
@keyframes sidebar-content-show {
  from {
    opacity: 0;
    transform: scale(0);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes sidebar-content-hide {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0);
  }
}

/* Input form style */
.admin-form input {
  margin-top: 0.5rem;
  height: 2rem;
  border-radius: 0.75rem;
  background-color: rgb(209 213 219);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  color: rgb(17 24 39);
}

/* Text area of taskitem */
.taskitem,
textarea {
  resize: none;
  box-sizing: border-box;
  overflow: hidden;
}

/* Message duration */
.messages {
  /* Add animation and transition properties */
  animation: fadeOut 6s; /* Adjust the duration as needed */
  transition: opacity 0.5s;
  animation-fill-mode: forwards;
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Style different message levels */
.alert-info {
  /* Tailwind-inspired success message styles */
  background-color: #48bb78; /* Customize color as needed */
  color: #fff; /* Text color */
  padding: 0.75rem;
  border-radius: 0.5rem;
  margin-left: 0.5rem;
  margin-top: 0.5rem;
  font-weight: 500;
}

.alert-success {
  /* Tailwind-inspired info message styles */
  background-color: #4299e1;
  color: #fff;
  padding: 0.75rem;
  border-radius: 0.5rem;
  margin-left: 0.5rem;
  margin-top: 0.5rem;
  font-weight: 500;
}

.alert-warning {
  /* Tailwind-inspired warning message styles */
  background-color: #ecc94b;
  color: #333; /* Customize text color */
  padding: 0.75rem;
  border-radius: 0.5rem;
  margin-left: 0.5rem;
  margin-top: 0.5rem;
  font-weight: 500;
}

.alert-error {
  /* Tailwind-inspired error message styles */
  background-color: #f56565;
  color: #fff;
  padding: 0.75rem;
  border-radius: 0.5rem;
  margin-left: 0.5rem;
  margin-top: 0.5rem;
  font-weight: 500;
}

.alert-debug {
  /* Tailwind-inspired error message styles */
  background-color: #4c0edf;
  color: #fff;
  padding: 0.75rem;
  border-radius: 0.5rem;
  margin-left: 0.5rem;
  margin-top: 0.5rem;
  font-weight: 500;
}

/* Tiptap components style */
.tiptap ul,
.tiptap ol {
  padding: 0 1rem;
  list-style: disc;
}
.tiptap h1,
.tiptap h2,
.tiptap h3,
.tiptap h4,
.tiptap h5,
.tiptap h6 {
  line-height: 1.1;
}
.tiptap a {
  color: #d408c3;
  cursor: pointer;
}

.tiptap a:hover {
  color: #6318dd;
}

.tiptap h1 {
  font-size: large;
  font-weight: bold;
}
.tiptap h2 {
  font-size: larger;
  font-weight: bold;
}
.tiptap h3 {
  font-size: medium;
  font-weight: bold;
}
.tiptap code {
  background-color: rgba(97, 97, 97, 0.1);
  color: #616161;
}
.tiptap pre {
  background: #0d0d0d;
  color: #fff;
  font-family: "JetBrainsMono", monospace;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
}
.tiptap pre code {
  color: inherit;
  padding: 0;
  background: none;
  font-size: 0.8rem;
}
.tiptap img {
  max-width: 100%;
  height: auto;
}
.tiptap blockquote {
  padding-left: 1rem;
  border-left: 2px solid rgba(13, 13, 13, 0.1);
}
.tiptap hr {
  border: none;
  border-top: 2px solid rgba(13, 13, 13, 0.1);
  margin: 2rem 0;
}

.tiptap {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  cursor: text;
  outline: none;
}

.tiptap input[type="checkbox"] {
  pointer-events: none;
}

.tiptap p.is-editor-empty:first-child::before {
  color: #9ca3af;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

ul[data-type="taskList"] {
  list-style: none;
  padding: 0;
}
ul[data-type="taskList"] p {
  margin: 0;
}
ul[data-type="taskList"] li {
  display: flex;
}
ul[data-type="taskList"] li > label {
  flex: 0 0 auto;
  margin-right: 0.5rem;
  user-select: none;
  justify-content: center;
}
ul[data-type="taskList"] li > div {
  flex: 1 1 auto;
}
ul[data-type="taskList"] li ul li,
ul[data-type="taskList"] li ol li {
  display: list-item;
}
ul[data-type="taskList"] li ul[data-type="taskList"] > li {
  display: flex;
}

input[type="checkbox"] {
  height: 1.25rem;
  width: 1.25rem;
  accent-color: rgb(217 70 239);
  cursor: pointer;
}
input[type="checkbox"]:checked {
  accent-color: rgb(232 121 249);
}

/* Select react component styles */
.select__control {
  border-radius: 0.75rem !important;
  height: 2rem;
  box-shadow: 0 0 0 0 !important;
  border-color: inherit !important;
}

.select__control:focus-within {
  border-color: rgb(6 182 212) !important;
  box-shadow: 0 0 0 1px rgb(6 182 212) !important;
}
.select__control:hover {
  border-color: rgb(6 182 212) !important;
  box-shadow: 0 0 0 1.5px rgb(6 182 212) !important;
  cursor: pointer;
}

.select__control[data-state="open"] {
  border-color: rgb(6 182 212) !important;
  box-shadow: 0 0 0 1.5px rgb(6 182 212) !important;
}

.select__control[data-state="open"] svg {
  fill: none !important;
  stroke: rgb(6 182 212);
}

.select__indicator svg {
  height: 1rem;
  width: 2rem;
  color: hsl(0, 0%, 80%);
}

.select__indicator {
  width: 2rem;
}

.select__control--menu-is-open svg {
  fill: rgb(6 182 212);
}

.select-ChevronDown {
  stroke-width: 2.7 !important;
}

/* Collasible element styles */
.collapsible {
  cursor: pointer;
  transition: all 0.25s ease-in-out;
}

.active {
  transform: rotateZ(-180deg);
  transition: all 0.25s ease-in-out;
}

.content {
  display: grid;
  grid-template-rows: 0fr;
  transition: grid-template-rows 0.25s ease-out;
}

.content.is-open {
  grid-template-rows: 1fr;
}

.inner {
  overflow: hidden;
}

/* Custom scrollbar  for webkit browsers (safari and chrome)*/
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

/* Style the custom scrollbar */
::-webkit-scrollbar-track {
  background: white;
}

::-webkit-scrollbar-thumb {
  background: #555; /* Change the color of the scrollbar thumb */
  border-radius: 8px; /* Adjust the border radius as needed */
}

/* Make the scrollbar appear on hover */
::-webkit-scrollbar-thumb:hover {
  background: #8b5cf6;
}

/* Custom scrollbar for mozilla browser */
::-moz-scrollbar {
  width: 8px;
}

/* Style the custom scrollbar */
::-moz-scrollbar-track {
  background: white;
}

::-moz-scrollbar-thumb {
  background: #555; /* Change the color of the scrollbar thumb */
  border-radius: 8px; /* Adjust the border radius as needed */
}

/* Make the scrollbar appear on hover */
::-moz-scrollbar-thumb:hover {
  background: #8b5cf6;
}

/* Animation when todo is completed */
.fade-out {
  animation: 0.2s fadeOut;
  animation-fill-mode: forwards;
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

/* Transition to a different view */
.fade-in {
  animation: 0.2s fadeIn;
  animation-fill-mode: forwards;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

/* Spinner animation class */
.loader {
  width: 1.5rem;
  height: 1.5rem;
  border: 0.15rem solid rgb(8 145 178);
  border-radius: 50%;
  display: block;
  box-sizing: border-box;
  position: absolute;
  animation: pulse 1s linear infinite;
  justify-content: center;
  align-self: center;
}
.loader:after {
  content: "";
  position: absolute;
  width: 1.5rem;
  height: 1.5rem;
  border: 0.15rem solid rgb(217 70 239);
  border-radius: 50%;
  display: block;
  box-sizing: border-box;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  animation: scaleUp 1s linear infinite;
}

@keyframes scaleUp {
  0% {
    transform: translate(-50%, -50%) scale(0);
  }
  60%,
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
}
@keyframes pulse {
  0%,
  60%,
  100% {
    transform: scale(1);
  }
  80% {
    transform: scale(1.2);
  }
}
