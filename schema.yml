openapi: 3.0.3
info:
  title: ""
  version: 0.0.0
paths:
  /api/lists/:
    get:
      operationId: lists_list
      tags:
        - lists
      security:
        - cookieAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/List"
          description: ""
    post:
      operationId: lists_create
      tags:
        - lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/List"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/List"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/List"
        required: true
      security:
        - cookieAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/List"
          description: ""
  /api/lists/{id}/:
    get:
      operationId: lists_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this list.
          required: true
      tags:
        - lists
      security:
        - cookieAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/List"
          description: ""
    put:
      operationId: lists_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this list.
          required: true
      tags:
        - lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/List"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/List"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/List"
        required: true
      security:
        - cookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/List"
          description: ""
    patch:
      operationId: lists_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this list.
          required: true
      tags:
        - lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedList"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedList"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedList"
      security:
        - cookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/List"
          description: ""
    delete:
      operationId: lists_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this list.
          required: true
      tags:
        - lists
      security:
        - cookieAuth: []
      responses:
        "204":
          description: No response body
  /api/password_change/:
    post:
      operationId: password_change_create
      tags:
        - password_change
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordChange"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PasswordChange"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PasswordChange"
        required: true
      security:
        - cookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PasswordChange"
          description: ""
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - json
              - yaml
        - in: query
          name: lang
          schema:
            type: string
            enum:
              - af
              - ar
              - ar-dz
              - ast
              - az
              - be
              - bg
              - bn
              - br
              - bs
              - ca
              - ckb
              - cs
              - cy
              - da
              - de
              - dsb
              - el
              - en
              - en-au
              - en-gb
              - eo
              - es
              - es-ar
              - es-co
              - es-mx
              - es-ni
              - es-ve
              - et
              - eu
              - fa
              - fi
              - fr
              - fy
              - ga
              - gd
              - gl
              - he
              - hi
              - hr
              - hsb
              - hu
              - hy
              - ia
              - id
              - ig
              - io
              - is
              - it
              - ja
              - ka
              - kab
              - kk
              - km
              - kn
              - ko
              - ky
              - lb
              - lt
              - lv
              - mk
              - ml
              - mn
              - mr
              - ms
              - my
              - nb
              - ne
              - nl
              - nn
              - os
              - pa
              - pl
              - pt
              - pt-br
              - ro
              - ru
              - sk
              - sl
              - sq
              - sr
              - sr-latn
              - sv
              - sw
              - ta
              - te
              - tg
              - th
              - tk
              - tr
              - tt
              - udm
              - uk
              - ur
              - uz
              - vi
              - zh-hans
              - zh-hant
      tags:
        - schema
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        "200":
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ""
  /api/settings/:
    get:
      operationId: settings_list
      tags:
        - settings
      security:
        - cookieAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Setting"
          description: ""
    post:
      operationId: settings_create
      tags:
        - settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Setting"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Setting"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Setting"
        required: true
      security:
        - cookieAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Setting"
          description: ""
  /api/settings/{id}/:
    get:
      operationId: settings_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this setting.
          required: true
      tags:
        - settings
      security:
        - cookieAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Setting"
          description: ""
    put:
      operationId: settings_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this setting.
          required: true
      tags:
        - settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Setting"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Setting"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Setting"
        required: true
      security:
        - cookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Setting"
          description: ""
    patch:
      operationId: settings_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this setting.
          required: true
      tags:
        - settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedSetting"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedSetting"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedSetting"
      security:
        - cookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Setting"
          description: ""
    delete:
      operationId: settings_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this setting.
          required: true
      tags:
        - settings
      security:
        - cookieAuth: []
      responses:
        "204":
          description: No response body
  /api/todos/:
    get:
      operationId: todos_list
      tags:
        - todos
      security:
        - cookieAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
          description: ""
    post:
      operationId: todos_create
      tags:
        - todos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Todo"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Todo"
        required: true
      security:
        - cookieAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
          description: ""
  /api/todos/{id}/:
    get:
      operationId: todos_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this todo.
          required: true
      tags:
        - todos
      security:
        - cookieAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
          description: ""
    put:
      operationId: todos_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this todo.
          required: true
      tags:
        - todos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Todo"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Todo"
        required: true
      security:
        - cookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
          description: ""
    patch:
      operationId: todos_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this todo.
          required: true
      tags:
        - todos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedTodo"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedTodo"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedTodo"
      security:
        - cookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
          description: ""
    delete:
      operationId: todos_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this todo.
          required: true
      tags:
        - todos
      security:
        - cookieAuth: []
      responses:
        "204":
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      tags:
        - users
      security:
        - cookieAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
          description: ""
    post:
      operationId: users_create
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      security:
        - cookieAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      security:
        - cookieAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
    put:
      operationId: users_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      security:
        - cookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
    patch:
      operationId: users_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedUser"
      security:
        - cookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
    delete:
      operationId: users_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      security:
        - cookieAuth: []
      responses:
        "204":
          description: No response body
components:
  schemas:
    List:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 75
        index:
          type: integer
        ordering:
          type: object
          additionalProperties: {}
        archived:
          type: boolean
        user:
          type: integer
          readOnly: true
      required:
        - title
    PasswordChange:
      type: object
      properties:
        old_password:
          type: string
        new_password1:
          type: string
        new_password2:
          type: string
      required:
        - new_password1
        - new_password2
        - old_password
    PatchedList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 75
        index:
          type: integer
        ordering:
          type: object
          additionalProperties: {}
        archived:
          type: boolean
        user:
          type: integer
          readOnly: true
    PatchedSetting:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        parameter:
          type: string
          maxLength: 50
        value:
          type: string
          maxLength: 50
        user:
          type: integer
          readOnly: true
    PatchedTodo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 10000
        created_at:
          type: string
          format: date-time
          readOnly: true
        complete:
          type: boolean
        completed_at:
          type: string
          format: date-time
          nullable: true
        priority:
          type: integer
          description: Task priority
        due_date:
          type: string
          format: date-time
          nullable: true
        all_day:
          type: boolean
        list:
          type: integer
        user:
          type: integer
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        inbox_id:
          type: integer
          nullable: true
    Setting:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        parameter:
          type: string
          maxLength: 50
        value:
          type: string
          maxLength: 50
        user:
          type: integer
          readOnly: true
      required:
        - id
        - parameter
        - user
        - value
    Todo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 10000
        created_at:
          type: string
          format: date-time
          readOnly: true
        complete:
          type: boolean
        completed_at:
          type: string
          format: date-time
          nullable: true
        priority:
          type: integer
          description: Task priority
        due_date:
          type: string
          format: date-time
          nullable: true
        all_day:
          type: boolean
        list:
          type: integer
        user:
          type: integer
          readOnly: true
      required:
        - title
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        inbox_id:
          type: integer
          nullable: true
      required:
        - id
        - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
